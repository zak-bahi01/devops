---
- name: Deploy Spring Boot and MySQL using Docker Compose
  hosts: all
  become: yes
  become_method: sudo
  become_user: root
  vars:
    docker_compose_dest: /home/vagrant/docker-compose.yml
    app_image: bahizak01/devops:latest
  tasks:

    - name: Create Docker network
      community.docker.docker_network:
        name: springboot-mysql-network
        state: present


    - name: Create Docker Compose file
      ansible.builtin.copy:
        dest: "{{ docker_compose_dest }}"
        content: |
          version: '3.7'
          services:
            app:
              image: "{{ app_image }}"
              ports:
                - 8080:8080
              depends_on:
                mysqldb:
                  condition: service_healthy
              environment:
                - SPRING_DATASOURCE_URL=jdbc:mysql://mysqldb:3306/DB?allowPublicKeyRetrieval=true&useSSL=false
                - SPRING_DATASOURCE_USERNAME=root
                - SPRING_DATASOURCE_PASSWORD=root
              networks:
                - springboot-mysql-network
            mysqldb:
              image: mysql:8.0.33
              ports:
                - 3306:3306
              environment:
                - MYSQL_DATABASE=DB
                - MYSQL_ROOT_PASSWORD=root
              volumes:
                - mysql-data:/var/lib/mysql
              networks:
                - springboot-mysql-network
              healthcheck:
                test: [ "CMD", "mysqladmin" ,"ping", "-h", "localhost" ]
                retries: 10
                interval: 3s
                timeout: 30s
              command: ["bash", "-c", "rm -rf /var/lib/mysql/* && docker-entrypoint.sh --character-set-server=utf8mb4 --collation-server=utf8mb4_unicode_ci"]
          volumes:
            mysql-data:
          networks:
            springboot-mysql-network:
              external: true

    - name: Bring up Docker Compose stack
      ansible.builtin.shell: |
        docker compose -f "{{ docker_compose_dest }}" up -d